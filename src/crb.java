
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author csa
 */
public class crb extends javax.swing.JFrame {

    /**
     * Creates new form crb
     */
    public crb() {
        initComponents();
        Show_Sales_In_JTable();
        showTotal() ;
    }
    
    public Connection getConnection(){
    Connection con = null;
     
        try {
        
            con = DriverManager.getConnection("jdbc:mysql://localhost/sale_db","root","lkm042000");
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(SaleMenu.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
}


       
        


 public ArrayList<Sale> getSaleList()
    {
            ArrayList<Sale> saleList  = new ArrayList<>();
            Connection con = getConnection();
            
            
            String query = "SELECT * FROM sales where server like '%CR';";
            
            Statement st;
            ResultSet rs;
            
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            Sale sale;
            
            while(rs.next())
            {
                sale = new Sale(rs.getInt("id"),Float.parseFloat(rs.getString("amount")),rs.getString("server"),rs.getString("add_date"));
                saleList.add(sale);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(SaleMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return saleList; 
                
    }
    
    
    //      2 - Populate The JTable
    
    public void Show_Sales_In_JTable()
    {
        ArrayList<Sale> list = getSaleList();
        DefaultTableModel model = (DefaultTableModel)JTable_Sales.getModel();
        // clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(int i = 0; i < list.size(); i++)
        {
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getDate();
            row[2] = list.get(i).getServer();
            row[3] = list.get(i).getAmount();
            
            model.addRow(row);
        }
    
    }
    
    // Show Data In Inputs
    public void ShowItem(int index)
    {
            
            txt_id.setText(Integer.toString(getSaleList().get(index).getId()));
            
    }
    
    public void showTotal() {
        float tsale = 0;
        
        Connection con = getConnection();
        PreparedStatement ps;
        try {
            ps = con.prepareStatement("select sum(amount) from sales where server like '%CR';");
           
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            tsale = (float) rs.getLong(1);
        }
        
        
        } catch (SQLException ex) {
            Logger.getLogger(Todays_Total.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        salet.setText(String.valueOf(tsale));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        i = new javax.swing.JPanel();
        BackRButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable_Sales = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        salet = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_id = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        i.setBackground(new java.awt.Color(153, 255, 204));
        i.setVerifyInputWhenFocusTarget(false);
        i.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                iKeyPressed(evt);
            }
        });

        BackRButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        BackRButton.setText("Back");
        BackRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackRButtonActionPerformed(evt);
            }
        });
        BackRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BackRButtonKeyPressed(evt);
            }
        });

        JTable_Sales.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        JTable_Sales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Add Date", "Server", "Amount"
            }
        ));
        JTable_Sales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTable_SalesMouseClicked(evt);
            }
        });
        JTable_Sales.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTable_SalesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                JTable_SalesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(JTable_Sales);

        Add.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Add.setText("Credit Paid");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        Add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setText("Total :");

        salet.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("CREDIT ");

        jLabel3.setText(" ID :");

        javax.swing.GroupLayout iLayout = new javax.swing.GroupLayout(i);
        i.setLayout(iLayout);
        iLayout.setHorizontalGroup(
            iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iLayout.createSequentialGroup()
                .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(iLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BackRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iLayout.createSequentialGroup()
                        .addContainerGap(138, Short.MAX_VALUE)
                        .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(iLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(salet, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)))
                .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(iLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(101, 101, 101))
        );
        iLayout.setVerticalGroup(
            iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(iLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(iLayout.createSequentialGroup()
                        .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(iLayout.createSequentialGroup()
                                .addComponent(BackRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, iLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(iLayout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(iLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(i, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(i, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackRButtonActionPerformed
        this.setVisible(false);
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_BackRButtonActionPerformed

    private void BackRButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BackRButtonKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            this.setVisible(false);
            new MainMenu().setVisible(true);
        }

        else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            JTable_Sales.setRowSelectionInterval(0,0);
            int index = JTable_Sales.getSelectedRow();
        ShowItem(index);
        JTable_Sales.requestFocus();
        }
    }//GEN-LAST:event_BackRButtonKeyPressed

    private void JTable_SalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTable_SalesMouseClicked
        int index = JTable_Sales.getSelectedRow();
        ShowItem(index);
    }//GEN-LAST:event_JTable_SalesMouseClicked

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed

        
            String s= null;
            float a = 0;
            
            
            try {
                Connection con = getConnection();
            
            
            String query = "SELECT * FROM sales where server like '%CR' and id = " + txt_id.getText();
            
            Statement st;
            ResultSet rs;
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            s= rs.getString("server");
            
                PreparedStatement ps2 = con.prepareStatement("UPDATE sales set server  = '" + s + "B' where id = ?;");
                ps2.setString(1, txt_id.getText());
                ps2.executeUpdate();
                PreparedStatement ps = con.prepareStatement("INSERT INTO sales(amount,server,add_date)" + "values(?,?,?)");
                ps.setString(1, rs.getString("amount"));
                ps.setString(2, s + "B");
                
                ps.setDate(3, java.sql.Date.valueOf(java.time.LocalDate.now()));
                ps.executeUpdate();
                

                

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex.getMessage());
            }
        
        txt_id.setText("");
        
        JTable_Sales.scrollRectToVisible(JTable_Sales.getCellRect(JTable_Sales.getRowCount()-1,JTable_Sales.getColumnCount(),true ));
        BackRButton.requestFocus();
        showTotal();
        Show_Sales_In_JTable();
    }//GEN-LAST:event_AddActionPerformed

    private void iKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            this.setVisible(false);
            new MainMenu().setVisible(true);
        }
    }//GEN-LAST:event_iKeyPressed

    private void JTable_SalesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTable_SalesKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_UP  ){

            int index = JTable_Sales.getSelectedRow();
            ShowItem(index);
        }
        else if(evt.getKeyCode() == KeyEvent.VK_DOWN ){

            int index = JTable_Sales.getSelectedRow();
            ShowItem(index);
        }
    }//GEN-LAST:event_JTable_SalesKeyReleased

    private void JTable_SalesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTable_SalesKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            this.setVisible(false);
            new MainMenu().setVisible(true);
        }

        else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            Add.requestFocus();
        }
    }//GEN-LAST:event_JTable_SalesKeyPressed

    private void AddKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            String s= null;
            float a = 0;
            java.sql.Date date =null;
            DateFormat d = new SimpleDateFormat("MM/dd/yyyy");
            try {
                Connection con = getConnection();
                PreparedStatement ps1 = con.prepareStatement("select server from sales where id = ?;");
            ps1.setInt(1, Integer.parseInt(txt_id.getText()) );
        ResultSet rs = ps1.executeQuery();
        if (rs.next()) {
            s = (String) rs.getString(1);
        }
        PreparedStatement ps3 = con.prepareStatement("select amount from sales where id = ?;");
            ps3.setInt(1, Integer.parseInt(txt_id.getText()) );
        ResultSet rs1 = ps3.executeQuery();
        if (rs1.next()) {
            a = (float) rs1.getLong(1);
        }
        
        PreparedStatement ps4 = con.prepareStatement("select add_date from sales where id = ?;");
            ps4.setInt(1, Integer.parseInt(txt_id.getText()) );
        ResultSet rs2 = ps4.executeQuery();
        if (rs1.next()) {
            date = rs1.getDate(1);
        }
                PreparedStatement ps2 = con.prepareStatement("UPDATE sales set server  = '" + s + "B' where id = ?;");
                ps2.setString(1, txt_id.getText());
                ps2.executeUpdate();
                PreparedStatement ps = con.prepareStatement("INSERT INTO sales(amount,server,add_date)" + "values(?,?,?)");
                ps.setString(1, Float.toString(a));
                ps.setString(2, s + "B( " + d.format(date) + ")" );
                
                ps.setDate(3, java.sql.Date.valueOf(java.time.LocalDate.now()));
                ps.executeUpdate();
                Show_Sales_In_JTable();

                

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,ex.getMessage());
            }
       
        txt_id.setText("");
        
        JTable_Sales.scrollRectToVisible(JTable_Sales.getCellRect(JTable_Sales.getRowCount()-1,JTable_Sales.getColumnCount(),true ));
        BackRButton.requestFocus();
        showTotal();
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            this.setVisible(false);
            new MainMenu().setVisible(true);
        }
    }//GEN-LAST:event_AddKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crb.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crb().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton BackRButton;
    private javax.swing.JTable JTable_Sales;
    private javax.swing.JPanel i;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel salet;
    private javax.swing.JLabel txt_id;
    // End of variables declaration//GEN-END:variables
}
