
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author csa
 */
public class specSale extends javax.swing.JFrame {

    /**
     * Creates new form specSale
     */
    public specSale() {
        initComponents();
    }
    
     public Connection getConnection(){
    Connection con = null;
     
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/sale_db","root","lkm042000");
            return con;
        } catch (SQLException ex) {
            Logger.getLogger(specSale.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
}
    
     public ArrayList<Sale> getSaleList()
    {
            ArrayList<Sale> saleList  = new ArrayList<>();
            Connection con = getConnection();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String addDate;
            addDate = dateFormat.format(new java.sql.Date(datec.getDate().getTime()));
            String query = "SELECT * FROM sales where add_date = " + "'"+addDate+"'" ;
            
            Statement st;
            ResultSet rs;
            
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            Sale sale;
            
            while(rs.next())
            {
                sale = new Sale(rs.getInt("id"),Float.parseFloat(rs.getString("amount")),rs.getString("server"),rs.getString("add_date"));
                saleList.add(sale);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(SaleMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return saleList; 
                
    }
    
    
    //      2 - Populate The JTable
    
    public void Show_Sales_In_JTable()
    {
        ArrayList<Sale> list = getSaleList();
        DefaultTableModel model = (DefaultTableModel)JTable_Sales.getModel();
        // clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(int i = 0; i < list.size(); i++)
        {
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getDate();
            row[2] = list.get(i).getServer();
            row[3] = list.get(i).getAmount();
            
            model.addRow(row);
        }
    
    }
    
     public ArrayList<Payment> getPaymentList()
    {
            ArrayList<Payment> paymentList  = new ArrayList<>();
            Connection con = getConnection();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String addDate;
            addDate = dateFormat.format(new java.sql.Date(datec.getDate().getTime()));
            String query = "SELECT * FROM payments where add_date = " + "'"+addDate+"'";
            
            Statement st;
            ResultSet rs;
            
        try {
            
            st = con.createStatement();
            rs = st.executeQuery(query);
            Payment payment;
            
            while(rs.next())
            {
                payment = new Payment(rs.getInt("id"),Float.parseFloat(rs.getString("amount")),rs.getString("server"),rs.getString("add_date"));
                paymentList.add(payment);
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(SaleMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return paymentList; 
                
    }
    
    
    //      2 - Populate The JTable
    
    public void Show_Payments_In_JTable()
    {
        ArrayList<Payment> list = getPaymentList();
        DefaultTableModel model = (DefaultTableModel)JTable_Payments.getModel();
        // clear jtable content
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(int i = 0; i < list.size(); i++)
        {
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getDate();
            row[2] = list.get(i).getServer();
            row[3] = list.get(i).getAmount();
            
            model.addRow(row);
        }
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        dateChooserDialog2 = new datechooser.beans.DateChooserDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sale = new javax.swing.JLabel();
        datec = new com.toedter.calendar.JDateChooser();
        BackRButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable_Sales = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        JTable_Payments = new javax.swing.JTable();
        show = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        payment = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ltotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1060, 690));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Total Sale    :");

        sale.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        datec.setDateFormatString("yyyy-MM-dd");
        datec.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                datecComponentAdded(evt);
            }
        });
        datec.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                datecAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        datec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                datecMouseEntered(evt);
            }
        });
        datec.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                datecCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        datec.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                datecPropertyChange(evt);
            }
        });
        datec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                datecKeyPressed(evt);
            }
        });

        BackRButton.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        BackRButton.setText("Back");
        BackRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackRButtonActionPerformed(evt);
            }
        });
        BackRButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BackRButtonKeyPressed(evt);
            }
        });

        JTable_Sales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Add Date", "Server", "Amount"
            }
        ));
        jScrollPane1.setViewportView(JTable_Sales);

        JTable_Payments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Add Date", "Server", "Amount"
            }
        ));
        jScrollPane2.setViewportView(JTable_Payments);

        show.setText("SHOW");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });
        show.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                showKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel2.setText("Total Payment   :");

        payment.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setText("Total Cash   :");

        ltotal.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sale, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(114, 114, 114)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ltotal, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BackRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(203, 203, 203)
                                .addComponent(datec, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(BackRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(datec, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sale, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(payment, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ltotal, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1221, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackRButtonActionPerformed
        this.setVisible(false);
        new Total().setVisible(true);
    }//GEN-LAST:event_BackRButtonActionPerformed

    private void datecAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_datecAncestorAdded
     
    }//GEN-LAST:event_datecAncestorAdded

    private void datecPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datecPropertyChange
        
    }//GEN-LAST:event_datecPropertyChange

    private void datecMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datecMouseEntered
      
    }//GEN-LAST:event_datecMouseEntered

    private void datecComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_datecComponentAdded
        
    }//GEN-LAST:event_datecComponentAdded

    private void datecCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_datecCaretPositionChanged
       
    }//GEN-LAST:event_datecCaretPositionChanged

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        float tsale = 0;
        float tpayment = 0;
        Connection con = getConnection();
        PreparedStatement ps;
        try {
            ps = con.prepareStatement("select sum(amount) from sales where add_date = ?;");
            ps.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            tsale = (float) rs.getLong(1);
        }
        
        PreparedStatement ps1 = con.prepareStatement("select sum(amount) from payments where add_date = ?;");
        ps1.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs1 = ps1.executeQuery();
        if (rs1.next()) {
            tpayment = (float) rs1.getLong(1);
        }
        } catch (SQLException ex) {
            Logger.getLogger(Todays_Total.class.getName()).log(Level.SEVERE, null, ex);
        }
        float total = tsale - tpayment;
        
        Show_Sales_In_JTable();
        Show_Payments_In_JTable();
        sale.setText(String.valueOf(tsale));
        payment.setText(String.valueOf(tpayment));
        ltotal.setText(String.valueOf(total));
    }//GEN-LAST:event_showActionPerformed

    private void showKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_showKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        float tsale = 0;
        float tpayment = 0;
        Connection con = getConnection();
        PreparedStatement ps;
        try {
            ps = con.prepareStatement("select sum(amount) from sales where add_date = ?;");
            ps.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            tsale = (float) rs.getLong(1);
        }
        
        PreparedStatement ps1 = con.prepareStatement("select sum(amount) from payments where add_date = ?;");
        ps1.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs1 = ps1.executeQuery();
        if (rs1.next()) {
            tpayment = (float) rs1.getLong(1);
        }
        } catch (SQLException ex) {
            Logger.getLogger(Todays_Total.class.getName()).log(Level.SEVERE, null, ex);
        }
        float total = tsale - tpayment;
        
        Show_Sales_In_JTable();
        Show_Payments_In_JTable();
        sale.setText(String.valueOf(tsale));
        payment.setText(String.valueOf(tpayment));
        ltotal.setText(String.valueOf(total));
         }
         else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE){
             this.setVisible(false);
        Total s = new Total();
        s.setVisible(true);
         }
    }//GEN-LAST:event_showKeyPressed

    private void datecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_datecKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        float tsale = 0;
        float tpayment = 0;
        Connection con = getConnection();
        PreparedStatement ps;
        try {
            ps = con.prepareStatement("select sum(amount) from sales where add_date = ?;");
            ps.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            tsale = (float) rs.getLong(1);
        }
        
        PreparedStatement ps1 = con.prepareStatement("select sum(amount) from payments where add_date = ?;");
        ps1.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs1 = ps1.executeQuery();
        if (rs1.next()) {
            tpayment = (float) rs1.getLong(1);
        }
        } catch (SQLException ex) {
            Logger.getLogger(Todays_Total.class.getName()).log(Level.SEVERE, null, ex);
        }
        float total = tsale - tpayment;
        
        Show_Sales_In_JTable();
        Show_Payments_In_JTable();
        sale.setText(String.valueOf(tsale));
        payment.setText(String.valueOf(tpayment));
        ltotal.setText(String.valueOf(total));
         }
         else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE){
             this.setVisible(false);
        Total s = new Total();
        s.setVisible(true);
         }
    }//GEN-LAST:event_datecKeyPressed

    private void BackRButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BackRButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        float tsale = 0;
        float tpayment = 0;
        Connection con = getConnection();
        PreparedStatement ps;
        try {
            ps = con.prepareStatement("select sum(amount) from sales where add_date = ?;");
            ps.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs = ps.executeQuery();
        if (rs.next()) {
            tsale = (float) rs.getLong(1);
        }
        
        PreparedStatement ps1 = con.prepareStatement("select sum(amount) from payments where add_date = ?;");
        ps1.setDate(1, new java.sql.Date(datec.getDate().getTime()));
        ResultSet rs1 = ps1.executeQuery();
        if (rs1.next()) {
            tpayment = (float) rs1.getLong(1);
        }
        } catch (SQLException ex) {
            Logger.getLogger(Todays_Total.class.getName()).log(Level.SEVERE, null, ex);
        }
        float total = tsale - tpayment;
        
        Show_Sales_In_JTable();
        Show_Payments_In_JTable();
        sale.setText(String.valueOf(tsale));
        payment.setText(String.valueOf(tpayment));
        ltotal.setText(String.valueOf(total));
         }
         else if (evt.getKeyCode() == KeyEvent.VK_ESCAPE){
             this.setVisible(false);
        Total s = new Total();
        s.setVisible(true);
         }
    }//GEN-LAST:event_BackRButtonKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(specSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(specSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(specSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(specSale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new specSale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackRButton;
    private javax.swing.JTable JTable_Payments;
    private javax.swing.JTable JTable_Sales;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private datechooser.beans.DateChooserDialog dateChooserDialog2;
    private com.toedter.calendar.JDateChooser datec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel ltotal;
    private javax.swing.JLabel payment;
    private javax.swing.JLabel sale;
    private javax.swing.JButton show;
    // End of variables declaration//GEN-END:variables
}
